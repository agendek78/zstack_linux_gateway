/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: server.proto */

#ifndef PROTOBUF_C_server_2eproto__INCLUDED
#define PROTOBUF_C_server_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1000002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _SrvrSimpleDescriptorT SrvrSimpleDescriptorT;
typedef struct _SrvrDeviceInfoT SrvrDeviceInfoT;
typedef struct _SrvrGetIeeeAddressReq SrvrGetIeeeAddressReq;
typedef struct _SrvrGetIeeeAddressCnf SrvrGetIeeeAddressCnf;
typedef struct _SrvrGetShortAddressReq SrvrGetShortAddressReq;
typedef struct _SrvrGetShortAddressCnf SrvrGetShortAddressCnf;
typedef struct _SrvrGetDeviceInfoReq SrvrGetDeviceInfoReq;
typedef struct _SrvrGetDeviceInfoCnf SrvrGetDeviceInfoCnf;
typedef struct _SrvrGetDeviceStatusReq SrvrGetDeviceStatusReq;
typedef struct _SrvrGetDeviceStatusCnf SrvrGetDeviceStatusCnf;
typedef struct _SrvrSetDeviceStatusReq SrvrSetDeviceStatusReq;
typedef struct _SrvrSetDeviceStatusCnf SrvrSetDeviceStatusCnf;


/* --- enums --- */

typedef enum _ZStackServerSysIdT {
  ZSTACK_SERVER_SYS_ID_T__RPC_SYS_PB_SRVR = 25
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ZSTACK_SERVER_SYS_ID_T)
} ZStackServerSysIdT;
typedef enum _SrvrCmdIdT {
  SRVR_CMD_ID_T__SRVR_GET_IEEE_ADDRESS_REQ = 0,
  SRVR_CMD_ID_T__SRVR_GET_IEEE_ADDRESS_CNF = 1,
  SRVR_CMD_ID_T__SRVR_GET_SHORT_ADDRESS_REQ = 2,
  SRVR_CMD_ID_T__SRVR_GET_SHORT_ADDRESS_CNF = 3,
  SRVR_CMD_ID_T__SRVR_GET_DEVICE_INFO_REQ = 4,
  SRVR_CMD_ID_T__SRVR_GET_DEVICE_INFO_CNF = 5,
  SRVR_CMD_ID_T__SRVR_GET_DEVICE_STATUS_REQ = 6,
  SRVR_CMD_ID_T__SRVR_GET_DEVICE_STATUS_CNF = 7,
  SRVR_CMD_ID_T__SRVR_SET_DEVICE_STATUS_REQ = 8,
  SRVR_CMD_ID_T__SRVR_SET_DEVICE_STATUS_CNF = 9
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SRVR_CMD_ID_T)
} SrvrCmdIdT;
typedef enum _SrvrDeviceStatusT {
  SRVR_DEVICE_STATUS_T__DEVICE_OFF_LINE = 0,
  SRVR_DEVICE_STATUS_T__DEVICE_ON_LINE = 1,
  SRVR_DEVICE_STATUS_T__DEVICE_REMOVED = 2,
  SRVR_DEVICE_STATUS_T__DEVICE_NA = 255
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SRVR_DEVICE_STATUS_T)
} SrvrDeviceStatusT;
typedef enum _SrvrStatusT {
  SRVR_STATUS_T__STATUS_SUCCESS = 0,
  SRVR_STATUS_T__STATUS_FAILURE = 1,
  SRVR_STATUS_T__STATUS_BUSY = 2,
  SRVR_STATUS_T__STATUS_INVALID_PARAMETER = 3,
  SRVR_STATUS_T__STATUS_TIMEOUT = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SRVR_STATUS_T)
} SrvrStatusT;

/* --- messages --- */

struct  _SrvrSimpleDescriptorT
{
  ProtobufCMessage base;
  uint32_t endpointid;
  uint32_t profileid;
  uint32_t deviceid;
  uint32_t devicever;
  size_t n_inputclusters;
  uint32_t *inputclusters;
  size_t n_outputclusters;
  uint32_t *outputclusters;
};
#define SRVR_SIMPLE_DESCRIPTOR_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&srvr_simple_descriptor_t__descriptor) \
    , 0, 0, 0, 0, 0,NULL, 0,NULL }


struct  _SrvrDeviceInfoT
{
  ProtobufCMessage base;
  uint32_t networkaddress;
  uint64_t ieeeaddress;
  protobuf_c_boolean has_parentieeeaddress;
  uint64_t parentieeeaddress;
  uint32_t manufacturerid;
  size_t n_simpledesclist;
  SrvrSimpleDescriptorT **simpledesclist;
  SrvrDeviceStatusT devicestatus;
};
#define SRVR_DEVICE_INFO_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&srvr_device_info_t__descriptor) \
    , 0, 0, 0,0, 0, 0,NULL, 0 }


struct  _SrvrGetIeeeAddressReq
{
  ProtobufCMessage base;
  SrvrCmdIdT cmdid;
  uint32_t shortaddress;
};
#define SRVR_GET_IEEE_ADDRESS_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&srvr_get_ieee_address_req__descriptor) \
    , SRVR_CMD_ID_T__SRVR_GET_IEEE_ADDRESS_REQ, 0 }


struct  _SrvrGetIeeeAddressCnf
{
  ProtobufCMessage base;
  SrvrCmdIdT cmdid;
  SrvrStatusT status;
  uint64_t ieeeaddress;
};
#define SRVR_GET_IEEE_ADDRESS_CNF__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&srvr_get_ieee_address_cnf__descriptor) \
    , SRVR_CMD_ID_T__SRVR_GET_IEEE_ADDRESS_CNF, 0, 0 }


struct  _SrvrGetShortAddressReq
{
  ProtobufCMessage base;
  SrvrCmdIdT cmdid;
  uint64_t ieeeaddress;
};
#define SRVR_GET_SHORT_ADDRESS_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&srvr_get_short_address_req__descriptor) \
    , SRVR_CMD_ID_T__SRVR_GET_SHORT_ADDRESS_REQ, 0 }


struct  _SrvrGetShortAddressCnf
{
  ProtobufCMessage base;
  SrvrCmdIdT cmdid;
  SrvrStatusT status;
  uint32_t shortaddress;
};
#define SRVR_GET_SHORT_ADDRESS_CNF__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&srvr_get_short_address_cnf__descriptor) \
    , SRVR_CMD_ID_T__SRVR_GET_SHORT_ADDRESS_CNF, 0, 0 }


struct  _SrvrGetDeviceInfoReq
{
  ProtobufCMessage base;
  SrvrCmdIdT cmdid;
  uint64_t ieeeaddress;
};
#define SRVR_GET_DEVICE_INFO_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&srvr_get_device_info_req__descriptor) \
    , SRVR_CMD_ID_T__SRVR_GET_DEVICE_INFO_REQ, 0 }


struct  _SrvrGetDeviceInfoCnf
{
  ProtobufCMessage base;
  SrvrCmdIdT cmdid;
  SrvrStatusT status;
  SrvrDeviceInfoT *deviceinfo;
};
#define SRVR_GET_DEVICE_INFO_CNF__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&srvr_get_device_info_cnf__descriptor) \
    , SRVR_CMD_ID_T__SRVR_GET_DEVICE_INFO_CNF, 0, NULL }


struct  _SrvrGetDeviceStatusReq
{
  ProtobufCMessage base;
  SrvrCmdIdT cmdid;
  uint64_t ieeeaddress;
};
#define SRVR_GET_DEVICE_STATUS_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&srvr_get_device_status_req__descriptor) \
    , SRVR_CMD_ID_T__SRVR_GET_DEVICE_STATUS_REQ, 0 }


struct  _SrvrGetDeviceStatusCnf
{
  ProtobufCMessage base;
  SrvrCmdIdT cmdid;
  SrvrStatusT status;
  SrvrDeviceStatusT devicestatus;
};
#define SRVR_GET_DEVICE_STATUS_CNF__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&srvr_get_device_status_cnf__descriptor) \
    , SRVR_CMD_ID_T__SRVR_GET_DEVICE_STATUS_CNF, 0, 0 }


struct  _SrvrSetDeviceStatusReq
{
  ProtobufCMessage base;
  SrvrCmdIdT cmdid;
  uint64_t ieeeaddress;
  SrvrDeviceStatusT devicestatus;
};
#define SRVR_SET_DEVICE_STATUS_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&srvr_set_device_status_req__descriptor) \
    , SRVR_CMD_ID_T__SRVR_SET_DEVICE_STATUS_REQ, 0, 0 }


struct  _SrvrSetDeviceStatusCnf
{
  ProtobufCMessage base;
  SrvrCmdIdT cmdid;
  SrvrStatusT status;
};
#define SRVR_SET_DEVICE_STATUS_CNF__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&srvr_set_device_status_cnf__descriptor) \
    , SRVR_CMD_ID_T__SRVR_SET_DEVICE_STATUS_CNF, 0 }


/* SrvrSimpleDescriptorT methods */
void   srvr_simple_descriptor_t__init
                     (SrvrSimpleDescriptorT         *message);
size_t srvr_simple_descriptor_t__get_packed_size
                     (const SrvrSimpleDescriptorT   *message);
size_t srvr_simple_descriptor_t__pack
                     (const SrvrSimpleDescriptorT   *message,
                      uint8_t             *out);
size_t srvr_simple_descriptor_t__pack_to_buffer
                     (const SrvrSimpleDescriptorT   *message,
                      ProtobufCBuffer     *buffer);
SrvrSimpleDescriptorT *
       srvr_simple_descriptor_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   srvr_simple_descriptor_t__free_unpacked
                     (SrvrSimpleDescriptorT *message,
                      ProtobufCAllocator *allocator);
/* SrvrDeviceInfoT methods */
void   srvr_device_info_t__init
                     (SrvrDeviceInfoT         *message);
size_t srvr_device_info_t__get_packed_size
                     (const SrvrDeviceInfoT   *message);
size_t srvr_device_info_t__pack
                     (const SrvrDeviceInfoT   *message,
                      uint8_t             *out);
size_t srvr_device_info_t__pack_to_buffer
                     (const SrvrDeviceInfoT   *message,
                      ProtobufCBuffer     *buffer);
SrvrDeviceInfoT *
       srvr_device_info_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   srvr_device_info_t__free_unpacked
                     (SrvrDeviceInfoT *message,
                      ProtobufCAllocator *allocator);
/* SrvrGetIeeeAddressReq methods */
void   srvr_get_ieee_address_req__init
                     (SrvrGetIeeeAddressReq         *message);
size_t srvr_get_ieee_address_req__get_packed_size
                     (const SrvrGetIeeeAddressReq   *message);
size_t srvr_get_ieee_address_req__pack
                     (const SrvrGetIeeeAddressReq   *message,
                      uint8_t             *out);
size_t srvr_get_ieee_address_req__pack_to_buffer
                     (const SrvrGetIeeeAddressReq   *message,
                      ProtobufCBuffer     *buffer);
SrvrGetIeeeAddressReq *
       srvr_get_ieee_address_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   srvr_get_ieee_address_req__free_unpacked
                     (SrvrGetIeeeAddressReq *message,
                      ProtobufCAllocator *allocator);
/* SrvrGetIeeeAddressCnf methods */
void   srvr_get_ieee_address_cnf__init
                     (SrvrGetIeeeAddressCnf         *message);
size_t srvr_get_ieee_address_cnf__get_packed_size
                     (const SrvrGetIeeeAddressCnf   *message);
size_t srvr_get_ieee_address_cnf__pack
                     (const SrvrGetIeeeAddressCnf   *message,
                      uint8_t             *out);
size_t srvr_get_ieee_address_cnf__pack_to_buffer
                     (const SrvrGetIeeeAddressCnf   *message,
                      ProtobufCBuffer     *buffer);
SrvrGetIeeeAddressCnf *
       srvr_get_ieee_address_cnf__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   srvr_get_ieee_address_cnf__free_unpacked
                     (SrvrGetIeeeAddressCnf *message,
                      ProtobufCAllocator *allocator);
/* SrvrGetShortAddressReq methods */
void   srvr_get_short_address_req__init
                     (SrvrGetShortAddressReq         *message);
size_t srvr_get_short_address_req__get_packed_size
                     (const SrvrGetShortAddressReq   *message);
size_t srvr_get_short_address_req__pack
                     (const SrvrGetShortAddressReq   *message,
                      uint8_t             *out);
size_t srvr_get_short_address_req__pack_to_buffer
                     (const SrvrGetShortAddressReq   *message,
                      ProtobufCBuffer     *buffer);
SrvrGetShortAddressReq *
       srvr_get_short_address_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   srvr_get_short_address_req__free_unpacked
                     (SrvrGetShortAddressReq *message,
                      ProtobufCAllocator *allocator);
/* SrvrGetShortAddressCnf methods */
void   srvr_get_short_address_cnf__init
                     (SrvrGetShortAddressCnf         *message);
size_t srvr_get_short_address_cnf__get_packed_size
                     (const SrvrGetShortAddressCnf   *message);
size_t srvr_get_short_address_cnf__pack
                     (const SrvrGetShortAddressCnf   *message,
                      uint8_t             *out);
size_t srvr_get_short_address_cnf__pack_to_buffer
                     (const SrvrGetShortAddressCnf   *message,
                      ProtobufCBuffer     *buffer);
SrvrGetShortAddressCnf *
       srvr_get_short_address_cnf__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   srvr_get_short_address_cnf__free_unpacked
                     (SrvrGetShortAddressCnf *message,
                      ProtobufCAllocator *allocator);
/* SrvrGetDeviceInfoReq methods */
void   srvr_get_device_info_req__init
                     (SrvrGetDeviceInfoReq         *message);
size_t srvr_get_device_info_req__get_packed_size
                     (const SrvrGetDeviceInfoReq   *message);
size_t srvr_get_device_info_req__pack
                     (const SrvrGetDeviceInfoReq   *message,
                      uint8_t             *out);
size_t srvr_get_device_info_req__pack_to_buffer
                     (const SrvrGetDeviceInfoReq   *message,
                      ProtobufCBuffer     *buffer);
SrvrGetDeviceInfoReq *
       srvr_get_device_info_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   srvr_get_device_info_req__free_unpacked
                     (SrvrGetDeviceInfoReq *message,
                      ProtobufCAllocator *allocator);
/* SrvrGetDeviceInfoCnf methods */
void   srvr_get_device_info_cnf__init
                     (SrvrGetDeviceInfoCnf         *message);
size_t srvr_get_device_info_cnf__get_packed_size
                     (const SrvrGetDeviceInfoCnf   *message);
size_t srvr_get_device_info_cnf__pack
                     (const SrvrGetDeviceInfoCnf   *message,
                      uint8_t             *out);
size_t srvr_get_device_info_cnf__pack_to_buffer
                     (const SrvrGetDeviceInfoCnf   *message,
                      ProtobufCBuffer     *buffer);
SrvrGetDeviceInfoCnf *
       srvr_get_device_info_cnf__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   srvr_get_device_info_cnf__free_unpacked
                     (SrvrGetDeviceInfoCnf *message,
                      ProtobufCAllocator *allocator);
/* SrvrGetDeviceStatusReq methods */
void   srvr_get_device_status_req__init
                     (SrvrGetDeviceStatusReq         *message);
size_t srvr_get_device_status_req__get_packed_size
                     (const SrvrGetDeviceStatusReq   *message);
size_t srvr_get_device_status_req__pack
                     (const SrvrGetDeviceStatusReq   *message,
                      uint8_t             *out);
size_t srvr_get_device_status_req__pack_to_buffer
                     (const SrvrGetDeviceStatusReq   *message,
                      ProtobufCBuffer     *buffer);
SrvrGetDeviceStatusReq *
       srvr_get_device_status_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   srvr_get_device_status_req__free_unpacked
                     (SrvrGetDeviceStatusReq *message,
                      ProtobufCAllocator *allocator);
/* SrvrGetDeviceStatusCnf methods */
void   srvr_get_device_status_cnf__init
                     (SrvrGetDeviceStatusCnf         *message);
size_t srvr_get_device_status_cnf__get_packed_size
                     (const SrvrGetDeviceStatusCnf   *message);
size_t srvr_get_device_status_cnf__pack
                     (const SrvrGetDeviceStatusCnf   *message,
                      uint8_t             *out);
size_t srvr_get_device_status_cnf__pack_to_buffer
                     (const SrvrGetDeviceStatusCnf   *message,
                      ProtobufCBuffer     *buffer);
SrvrGetDeviceStatusCnf *
       srvr_get_device_status_cnf__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   srvr_get_device_status_cnf__free_unpacked
                     (SrvrGetDeviceStatusCnf *message,
                      ProtobufCAllocator *allocator);
/* SrvrSetDeviceStatusReq methods */
void   srvr_set_device_status_req__init
                     (SrvrSetDeviceStatusReq         *message);
size_t srvr_set_device_status_req__get_packed_size
                     (const SrvrSetDeviceStatusReq   *message);
size_t srvr_set_device_status_req__pack
                     (const SrvrSetDeviceStatusReq   *message,
                      uint8_t             *out);
size_t srvr_set_device_status_req__pack_to_buffer
                     (const SrvrSetDeviceStatusReq   *message,
                      ProtobufCBuffer     *buffer);
SrvrSetDeviceStatusReq *
       srvr_set_device_status_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   srvr_set_device_status_req__free_unpacked
                     (SrvrSetDeviceStatusReq *message,
                      ProtobufCAllocator *allocator);
/* SrvrSetDeviceStatusCnf methods */
void   srvr_set_device_status_cnf__init
                     (SrvrSetDeviceStatusCnf         *message);
size_t srvr_set_device_status_cnf__get_packed_size
                     (const SrvrSetDeviceStatusCnf   *message);
size_t srvr_set_device_status_cnf__pack
                     (const SrvrSetDeviceStatusCnf   *message,
                      uint8_t             *out);
size_t srvr_set_device_status_cnf__pack_to_buffer
                     (const SrvrSetDeviceStatusCnf   *message,
                      ProtobufCBuffer     *buffer);
SrvrSetDeviceStatusCnf *
       srvr_set_device_status_cnf__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   srvr_set_device_status_cnf__free_unpacked
                     (SrvrSetDeviceStatusCnf *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*SrvrSimpleDescriptorT_Closure)
                 (const SrvrSimpleDescriptorT *message,
                  void *closure_data);
typedef void (*SrvrDeviceInfoT_Closure)
                 (const SrvrDeviceInfoT *message,
                  void *closure_data);
typedef void (*SrvrGetIeeeAddressReq_Closure)
                 (const SrvrGetIeeeAddressReq *message,
                  void *closure_data);
typedef void (*SrvrGetIeeeAddressCnf_Closure)
                 (const SrvrGetIeeeAddressCnf *message,
                  void *closure_data);
typedef void (*SrvrGetShortAddressReq_Closure)
                 (const SrvrGetShortAddressReq *message,
                  void *closure_data);
typedef void (*SrvrGetShortAddressCnf_Closure)
                 (const SrvrGetShortAddressCnf *message,
                  void *closure_data);
typedef void (*SrvrGetDeviceInfoReq_Closure)
                 (const SrvrGetDeviceInfoReq *message,
                  void *closure_data);
typedef void (*SrvrGetDeviceInfoCnf_Closure)
                 (const SrvrGetDeviceInfoCnf *message,
                  void *closure_data);
typedef void (*SrvrGetDeviceStatusReq_Closure)
                 (const SrvrGetDeviceStatusReq *message,
                  void *closure_data);
typedef void (*SrvrGetDeviceStatusCnf_Closure)
                 (const SrvrGetDeviceStatusCnf *message,
                  void *closure_data);
typedef void (*SrvrSetDeviceStatusReq_Closure)
                 (const SrvrSetDeviceStatusReq *message,
                  void *closure_data);
typedef void (*SrvrSetDeviceStatusCnf_Closure)
                 (const SrvrSetDeviceStatusCnf *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    zstack_server_sys_id_t__descriptor;
extern const ProtobufCEnumDescriptor    srvr_cmd_id_t__descriptor;
extern const ProtobufCEnumDescriptor    srvr_device_status_t__descriptor;
extern const ProtobufCEnumDescriptor    srvr_status_t__descriptor;
extern const ProtobufCMessageDescriptor srvr_simple_descriptor_t__descriptor;
extern const ProtobufCMessageDescriptor srvr_device_info_t__descriptor;
extern const ProtobufCMessageDescriptor srvr_get_ieee_address_req__descriptor;
extern const ProtobufCMessageDescriptor srvr_get_ieee_address_cnf__descriptor;
extern const ProtobufCMessageDescriptor srvr_get_short_address_req__descriptor;
extern const ProtobufCMessageDescriptor srvr_get_short_address_cnf__descriptor;
extern const ProtobufCMessageDescriptor srvr_get_device_info_req__descriptor;
extern const ProtobufCMessageDescriptor srvr_get_device_info_cnf__descriptor;
extern const ProtobufCMessageDescriptor srvr_get_device_status_req__descriptor;
extern const ProtobufCMessageDescriptor srvr_get_device_status_cnf__descriptor;
extern const ProtobufCMessageDescriptor srvr_set_device_status_req__descriptor;
extern const ProtobufCMessageDescriptor srvr_set_device_status_cnf__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_server_2eproto__INCLUDED */
